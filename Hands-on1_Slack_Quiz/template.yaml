AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Amazon Q + Slack AWS クイズアプリケーション

Globals:
  Function:
    Timeout: 30
    MemorySize: 256
    Runtime: python3.10
    Environment:
      Variables:
        QUIZ_TABLE_NAME: !Ref QuizScoresTable
        SLACK_SIGNING_SECRET: !Ref SlackSigningSecret
        SLACK_BOT_TOKEN: !Ref SlackBotToken

Parameters:
  SlackSigningSecret:
    Type: String
    Description: Secrets Manager からの Slack アプリ署名シークレット
    Default: "arn:aws:secretsmanager:us-east-1:123456789012:secret:slack/signing-secret"
  
  SlackBotToken:
    Type: String
    Description: Secrets Manager からの Slack ボットトークン
    Default: "arn:aws:secretsmanager:us-east-1:123456789012:secret:slack/bot-token"

Resources:
  # Lambda 関数
  SlackQuizFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: app.lambda_handler
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: slack-quiz
      Events:
        SlackCommand:
          Type: Api
          Properties:
            Path: /slack/command
            Method: post
            RestApiId: !Ref SlackQuizApi
        SlackInteraction:
          Type: Api
          Properties:
            Path: /slack/interaction
            Method: post
            RestApiId: !Ref SlackQuizApi
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref QuizScoresTable
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - bedrock:InvokeModel
              Resource: 
                - !Sub "arn:aws:bedrock:${AWS::Region}::foundation-model/anthropic.claude-3-haiku-20240307-v1:0"
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource:
                - !Ref SlackSigningSecret
                - !Ref SlackBotToken

  # API Gateway
  SlackQuizApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      Cors:
        AllowMethods: "'POST, OPTIONS'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
        AllowOrigin: "'*'"

  # DynamoDB テーブル
  QuizScoresTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: QuizScores
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: user_id
          AttributeType: S
        - AttributeName: score
          AttributeType: N
      KeySchema:
        - AttributeName: user_id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: ScoreIndex
          KeySchema:
            - AttributeName: score
              KeyType: HASH
          Projection:
            ProjectionType: ALL
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      Tags:
        - Key: Application
          Value: SlackQuiz

  # CloudWatch ロググループ
  SlackQuizLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${SlackQuizFunction}"
      RetentionInDays: 7

Outputs:
  SlackQuizApi:
    Description: "API Gateway エンドポイント URL"
    Value: !Sub "https://${SlackQuizApi}.execute-api.${AWS::Region}.amazonaws.com/prod/"
    Export:
      Name: !Sub "${AWS::StackName}-ApiUrl"
  
  QuizTableName:
    Description: "DynamoDB テーブル名"
    Value: !Ref QuizScoresTable
    Export:
      Name: !Sub "${AWS::StackName}-TableName"